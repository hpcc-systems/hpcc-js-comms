{"version":3,"file":"comms-node.js","sources":["../src/collections/stack.ts","../src/util/platform.ts","../src/util/logging.ts","../src/util/string.ts","../src/util/url.ts","../src/comms/connection.ts","../src/index-common.ts","../src/index-node.ts"],"sourcesContent":["/**\r\n * A generic Stack\r\n */\r\nexport class Stack<T> {\r\n    private stack: T[] = [];\r\n\r\n    /**\r\n     * Push element onto the stack\r\n     *\r\n     * @param e - element to push\r\n     */\r\n    push(e: T) {\r\n        this.stack.push(e);\r\n        return e;\r\n    }\r\n\r\n    /**\r\n     * Pop element off the stack\r\n     */\r\n    pop(): T | undefined {\r\n        return this.stack.pop();\r\n    }\r\n\r\n    /**\r\n     * Top item on the stack\r\n     *\r\n     * @returns Top element on the stack\r\n     */\r\n    top(): T | undefined {\r\n        return this.stack.length ? this.stack[this.stack.length - 1] : undefined;\r\n    }\r\n\r\n    /**\r\n     * Depth of stack\r\n     *\r\n     * @returns Depth\r\n     */\r\n    depth(): number {\r\n        return this.stack.length;\r\n    }\r\n}\r\n","export const root = new Function(\"try{return global;}catch(e){return window;}\")();\r\n\r\nexport const isBrowser = new Function(\"try{return this===window;}catch(e){return false;}\");\r\nexport const isNode = new Function(\"try{return this===global;}catch(e){return false;}\");\r\nexport const isTravis = new Function(\"try{return process.env.TRAVIS;}catch(e){return false;}\");\r\n","import { Stack } from \"../collections/stack\";\r\nimport { isNode } from \"./platform\";\r\n\r\nexport enum Level {\r\n    debug,\r\n    info,\r\n    notice,\r\n    warning,\r\n    error,\r\n    critical,\r\n    alert,\r\n    emergency\r\n}\r\n\r\nconst colours = {\r\n    debug: \"cyan\",\r\n    info: \"green\",\r\n    notice: \"grey\",\r\n    warning: \"blue\",\r\n    errpr: \"red\",\r\n    critical: \"magenta\",\r\n    alert: \"magenta\",\r\n    emergency: \"magenta\"\r\n};\r\n\r\nexport class Logging {\r\n    private static _instance: Logging;\r\n    private _levelStack = new Stack<Level>();\r\n    private _level = Level.error;\r\n    private _filter: string = \"\";\r\n\r\n    public static Instance() {\r\n        return this._instance || (this._instance = new this());\r\n    }\r\n\r\n    private constructor() {\r\n    }\r\n\r\n    private stringify(obj: object): string {\r\n        const cache: any[] = [];\r\n        return JSON.stringify(obj, function (_key, value) {\r\n            if (typeof value === \"object\" && value !== null) {\r\n                if (cache.indexOf(value) !== -1) {\r\n                    return;\r\n                }\r\n                cache.push(value);\r\n            }\r\n            return value;\r\n        }, 2);\r\n    }\r\n\r\n    log(level: Level, id: string, msg: string | object) {\r\n        if (level < this._level) return;\r\n        if (this._filter && this._filter !== id) return;\r\n\r\n        const d = new Date();\r\n        const n = d.toISOString();\r\n        if (typeof msg !== \"string\") {\r\n            msg = this.stringify(msg);\r\n        }\r\n        if (isNode) {\r\n            // tslint:disable-next-line:no-console\r\n            console.log(`[${n}] ${Level[level].toUpperCase()} ${id}:  ${msg}`);\r\n        } else {\r\n            // tslint:disable-next-line:no-console\r\n            console.log(`[${n}] %c${Level[level].toUpperCase()}%c ${id}:  ${msg}`, `color:${colours[Level[level]]}`, \"\");\r\n        }\r\n    }\r\n\r\n    debug(id: string, msg: string | object) {\r\n        this.log(Level.debug, id, msg);\r\n    }\r\n\r\n    info(id: string, msg: string | object) {\r\n        this.log(Level.info, id, msg);\r\n    }\r\n\r\n    notice(id: string, msg: string | object) {\r\n        this.log(Level.notice, id, msg);\r\n    }\r\n\r\n    warning(id: string, msg: string | object) {\r\n        this.log(Level.warning, id, msg);\r\n    }\r\n\r\n    error(id: string, msg: string | object) {\r\n        this.log(Level.error, id, msg);\r\n    }\r\n\r\n    critical(id: string, msg: string | object) {\r\n        this.log(Level.critical, id, msg);\r\n    }\r\n\r\n    alert(id: string, msg: string | object) {\r\n        this.log(Level.alert, id, msg);\r\n    }\r\n\r\n    emergency(id: string, msg: string | object) {\r\n        this.log(Level.emergency, id, msg);\r\n    }\r\n\r\n    level(): Level;\r\n    level(_: Level): this;\r\n    level(_?: Level): Level | this {\r\n        if (!arguments.length) return this._level;\r\n        this._level = _;\r\n        return this;\r\n    }\r\n\r\n    pushLevel(_: Level): this {\r\n        this._levelStack.push(this._level);\r\n        this._level = _;\r\n        return this;\r\n    }\r\n\r\n    popLevel(): this {\r\n        this._level = this._levelStack.pop();\r\n        return this;\r\n    }\r\n\r\n    filter(): string;\r\n    filter(_: string): this;\r\n    filter(_?: string): string | this {\r\n        if (!arguments.length) return this._filter;\r\n        this._filter = _;\r\n        return this;\r\n    }\r\n}\r\nexport const logger = Logging.Instance();\r\n\r\nexport class ScopedLogging {\r\n    protected _scopeID: string;\r\n\r\n    constructor(scopeID: string) {\r\n        this._scopeID = scopeID;\r\n    }\r\n\r\n    debug(msg: string | object) {\r\n        logger.debug(this._scopeID, msg);\r\n    }\r\n\r\n    info(msg: string | object) {\r\n        logger.info(this._scopeID, msg);\r\n    }\r\n\r\n    notice(msg: string | object) {\r\n        logger.notice(this._scopeID, msg);\r\n    }\r\n\r\n    warning(msg: string | object) {\r\n        logger.warning(this._scopeID, msg);\r\n    }\r\n\r\n    error(msg: string | object) {\r\n        logger.error(this._scopeID, msg);\r\n    }\r\n\r\n    critical(msg: string | object) {\r\n        logger.critical(this._scopeID, msg);\r\n    }\r\n\r\n    alert(msg: string | object) {\r\n        logger.alert(this._scopeID, msg);\r\n    }\r\n\r\n    emergency(msg: string | object) {\r\n        logger.emergency(this._scopeID, msg);\r\n    }\r\n\r\n    pushLevel(_: Level): this {\r\n        logger.pushLevel(_);\r\n        return this;\r\n    }\r\n\r\n    popLevel(): this {\r\n        logger.popLevel();\r\n        return this;\r\n    }\r\n}\r\n\r\nexport function scopedLogger(scopeID: string, filter: boolean = true) {\r\n    if (filter) {\r\n        logger.filter(scopeID);\r\n    }\r\n    return new ScopedLogging(scopeID);\r\n}\r\n","export function trim(str: string, char: string): string {\r\n    if (typeof char !== \"string\") return str;\r\n    if (char.length === 0) return str;\r\n    while (str.indexOf(char) === 0) {\r\n        str = str.substring(1);\r\n    }\r\n    while (endsWith(str, char)) {\r\n        str = str.substring(0, str.length - 1);\r\n    }\r\n    return str;\r\n}\r\n\r\nexport function endsWith(origString: string, searchString: string, position?: number) {\r\n    const subjectString = origString.toString();\r\n    if (typeof position !== \"number\" || !isFinite(position) || Math.floor(position) !== position || position > subjectString.length) {\r\n        position = subjectString.length;\r\n    }\r\n    position -= searchString.length;\r\n    const lastIndex = subjectString.lastIndexOf(searchString, position);\r\n    return lastIndex !== -1 && lastIndex === position;\r\n}\r\n","import { trim } from \"../util/string\";\r\n\r\nexport function join(...args: string[]): string {\r\n    const partialUrl: boolean = args.length && args[0].length && args[0].charAt(0) === \"/\";\r\n    return (partialUrl ? \"/\" : \"\") + args.map((arg) => {\r\n        return trim(arg, \"/\");\r\n    }).join(\"/\");\r\n}\r\n","import { scopedLogger } from \"../util/logging\";\r\nimport { join } from \"../util/url\";\r\n\r\nconst logger = scopedLogger(\"comms/connection.ts\");\r\n\r\nexport enum RequestType {\r\n    POST,\r\n    GET,\r\n    JSONP\r\n}\r\n\r\nexport enum ResponseType {\r\n    JSON,\r\n    TEXT\r\n}\r\n\r\nexport interface IOptions {\r\n    baseUrl: string;\r\n    type?: RequestType;\r\n    userID?: string;\r\n    password?: string;\r\n    rejectUnauthorized?: boolean;\r\n    timeoutSecs?: number;\r\n}\r\nconst DefaultOptions: IOptions = {\r\n    type: RequestType.POST,\r\n    baseUrl: \"\",\r\n    userID: \"\",\r\n    password: \"\",\r\n    rejectUnauthorized: false,\r\n    timeoutSecs: 60\r\n};\r\n\r\nexport interface IConnection {\r\n    opts(_: Partial<IOptions>): this;\r\n    opts(): IOptions;\r\n\r\n    send(action: string, request: any, responseType?: ResponseType): Promise<any>;\r\n    clone(): IConnection;\r\n}\r\n\r\n//  Polyfill helpers  ---\r\nlet _nodeRequest: any = null;\r\nexport function initNodeRequest(nodeRequest: any) {\r\n    _nodeRequest = nodeRequest;\r\n}\r\n\r\nlet _d3Request: any = null;\r\nexport function initD3Request(d3Request: any) {\r\n    _d3Request = d3Request;\r\n}\r\n\r\nexport class Connection implements IConnection {\r\n    protected _opts: IOptions;\r\n\r\n    constructor(opts: IOptions) {\r\n        this.opts(opts);\r\n    }\r\n\r\n    protected serialize(obj: any, prefix: string = \"\"): string {\r\n        if (prefix) {\r\n            prefix += \".\";\r\n        }\r\n        if (typeof obj !== \"object\") {\r\n            return encodeURIComponent(obj);\r\n        }\r\n\r\n        const str: string[] = [];\r\n        for (const key in obj) {\r\n            if (obj.hasOwnProperty(key)) {\r\n                if (obj[key] instanceof Array) {\r\n                    //  Specific to ESP - but no REST standard exists...\r\n                    let includeItemCount = false;\r\n                    obj[key].forEach((row: any, i: number) => {\r\n                        if (typeof row === \"object\") {\r\n                            includeItemCount = true;\r\n                            str.push(this.serialize(row, prefix + encodeURIComponent(`${key}.${i}`)));\r\n                        } else {\r\n                            str.push(prefix + encodeURIComponent(`${key}_i${i}`) + \"=\" + this.serialize(row));\r\n                        }\r\n                    });\r\n                    if (includeItemCount) {\r\n                        str.push(prefix + encodeURIComponent(`${key}.itemcount`) + \"=\" + obj[key].length);\r\n                    }\r\n                } else if (typeof obj[key] === \"object\") {\r\n                    str.push(this.serialize(obj[key], prefix + encodeURIComponent(key)));\r\n                } else {\r\n                    str.push(prefix + encodeURIComponent(key) + \"=\" + encodeURIComponent(obj[key]));\r\n                }\r\n            }\r\n        }\r\n        return str.join(\"&\");\r\n    }\r\n\r\n    deserialize(body: string) {\r\n        return JSON.parse(body);\r\n    }\r\n\r\n    private nodeRequestSend(verb: \"POST\" | \"GET\", action: string, request: any, responseType: ResponseType = ResponseType.JSON): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            const options: any = {\r\n                method: verb,\r\n                uri: join(this._opts.baseUrl, action),\r\n                auth: {\r\n                    user: this._opts.userID,\r\n                    pass: this._opts.password,\r\n                    sendImmediately: true\r\n                },\r\n                username: this._opts.userID,\r\n                password: this._opts.password,\r\n                timeout: this._opts.timeoutSecs * 1000\r\n            };\r\n            //  Older ESP versions were not case insensitive  ---\r\n            const oldESPAuth = `Basic ${btoa(this._opts.userID + \":\" + this._opts.password)}`;\r\n            switch (verb) {\r\n                case \"GET\":\r\n                    options.headers = {\r\n                        Authorization: oldESPAuth\r\n                    };\r\n                    options.uri += \"?\" + this.serialize(request);\r\n                    break;\r\n                case \"POST\":\r\n                    options.headers = {\r\n                        \"X-Requested-With\": \"XMLHttpRequest\",\r\n                        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                        \"Authorization\": oldESPAuth\r\n                    };\r\n                    options.rejectUnauthorized = this._opts.rejectUnauthorized;\r\n                    options.body = this.serialize(request);\r\n                    break;\r\n                default:\r\n            }\r\n            _nodeRequest(options, (err: any, resp: any, body: any) => {\r\n                if (err) {\r\n                    reject(new Error(err));\r\n                } else if (resp && resp.statusCode === 200) {\r\n                    resolve(responseType === ResponseType.JSON ? this.deserialize(body) : body);\r\n                } else {\r\n                    reject(new Error(body));\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    private d3Send(verb: \"POST\" | \"GET\", action: string, request: any, responseType: ResponseType = ResponseType.JSON): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            const options: any = {\r\n                method: verb,\r\n                uri: join(this._opts.baseUrl, action),\r\n                auth: {\r\n                    user: this._opts.userID,\r\n                    pass: this._opts.password,\r\n                    sendImmediately: true\r\n                },\r\n                username: this._opts.userID,\r\n                password: this._opts.password\r\n            };\r\n            switch (verb) {\r\n                case \"GET\":\r\n                    options.uri += \"?\" + this.serialize(request);\r\n                    break;\r\n                case \"POST\":\r\n                    options.headers = {\r\n                        \"X-Requested-With\": \"XMLHttpRequest\",\r\n                        \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n                    };\r\n                    options.rejectUnauthorized = this._opts.rejectUnauthorized;\r\n                    options.body = this.serialize(request);\r\n                    break;\r\n                default:\r\n            }\r\n            const xhr = _d3Request(options.uri)\r\n                .timeout(this._opts.timeoutSecs * 1000)\r\n                ;\r\n            if (verb === \"POST\") {\r\n                xhr\r\n                    .header(\"X-Requested-With\", \"XMLHttpRequest\")\r\n                    .header(\"Content-Type\", \"application/x-www-form-urlencoded\")\r\n                    .header(\"Origin\", null)\r\n                    ;\r\n            }\r\n            xhr\r\n                .send(verb, options.body, (err: any, resp: any) => {\r\n                    if (err) {\r\n                        reject(new Error(err));\r\n                    } else if (resp && resp.status === 200) {\r\n                        resolve(responseType === ResponseType.JSON ? this.deserialize(resp.responseText) : resp.responseText);\r\n                    } else {\r\n                        reject(new Error(resp.responseText));\r\n                    }\r\n                });\r\n        });\r\n    }\r\n\r\n    post(action: string, request: any, responseType: ResponseType = ResponseType.JSON): Promise<any> {\r\n        if (_nodeRequest) {\r\n            return this.nodeRequestSend(\"POST\", action, request, responseType);\r\n        } else if (_d3Request) {\r\n            return this.d3Send(\"POST\", action, request, responseType);\r\n        }\r\n        throw new Error(\"No transport\");\r\n    }\r\n\r\n    get(action: string, request: any, responseType: ResponseType = ResponseType.JSON): Promise<any> {\r\n        if (_nodeRequest) {\r\n            return this.nodeRequestSend(\"GET\", action, request, responseType);\r\n        } else if (_d3Request) {\r\n            return this.d3Send(\"GET\", action, request, responseType);\r\n        }\r\n        throw new Error(\"No transport\");\r\n    }\r\n\r\n    jsonp(action: string, request: any = {}, responseType: ResponseType = ResponseType.JSON): Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let respondedTimeout = this._opts.timeoutSecs * 1000;\r\n            const respondedTick = 5000;\r\n            const callbackName = \"jsonp_callback_\" + Math.round(Math.random() * 999999);\r\n            const context = this;\r\n            (window as any)[callbackName] = function (response: any) {\r\n                respondedTimeout = 0;\r\n                doCallback();\r\n                resolve(responseType === ResponseType.JSON && typeof response === \"string\" ? context.deserialize(response) : response);\r\n            };\r\n            const script = document.createElement(\"script\");\r\n            let url = join(this._opts.baseUrl, action);\r\n            url += url.indexOf(\"?\") >= 0 ? \"&\" : \"?\";\r\n            script.src = url + \"jsonp=\" + callbackName + \"&\" + this.serialize(request);\r\n            document.body.appendChild(script);\r\n            const progress = setInterval(function () {\r\n                if (respondedTimeout <= 0) {\r\n                    clearInterval(progress);\r\n                } else {\r\n                    respondedTimeout -= respondedTick;\r\n                    if (respondedTimeout <= 0) {\r\n                        clearInterval(progress);\r\n                        logger.error(\"Request timeout:  \" + script.src);\r\n                        doCallback();\r\n                        reject(Error(\"Request timeout:  \" + script.src));\r\n                    } else {\r\n                        logger.debug(\"Request pending (\" + respondedTimeout / 1000 + \" sec):  \" + script.src);\r\n                    }\r\n                }\r\n            }, respondedTick);\r\n\r\n            function doCallback() {\r\n                delete (window as any)[callbackName];\r\n                document.body.removeChild(script);\r\n            }\r\n        });\r\n    }\r\n\r\n    //  IConnection  ---\r\n\r\n    opts(_: Partial<IOptions>): this;\r\n    opts(): IOptions;\r\n    opts(_?: Partial<IOptions>): this | IOptions {\r\n        if (arguments.length === 0) return this._opts;\r\n        this._opts = { ...DefaultOptions, ..._ };\r\n        return this;\r\n    }\r\n\r\n    send(action: string, request: any, responseType: ResponseType = ResponseType.JSON): Promise<any> {\r\n        switch (this._opts.type) {\r\n            case RequestType.JSONP:\r\n                return this.jsonp(action, request, responseType);\r\n            case RequestType.GET:\r\n                return this.get(action, request, responseType);\r\n            case RequestType.POST:\r\n            default:\r\n                return this.post(action, request, responseType);\r\n        }\r\n    }\r\n\r\n    clone() {\r\n        return new Connection(this.opts());\r\n    }\r\n}\r\n\r\nexport type IConnectionFactory = (opts: IOptions) => IConnection;\r\nexport let createConnection: IConnectionFactory = function (opts: IOptions): IConnection {\r\n    return new Connection(opts);\r\n};\r\n\r\nexport function setTransportFactory(newFunc: IConnectionFactory): IConnectionFactory {\r\n    const retVal = createConnection;\r\n    createConnection = newFunc;\r\n    return retVal;\r\n}\r\n","export const version = \"0.0.1\";\r\n\r\nexport { Connection, RequestType, ResponseType } from \"./comms/connection\";\r\n","//  XHR polyfill  ---\r\nimport * as nodeRequest from \"request\";\r\nimport { initNodeRequest } from \"./comms/connection\";\r\ninitNodeRequest(nodeRequest);\r\n\r\n//  btoa polyfill  ---\r\nimport { Buffer } from \"safe-buffer\";\r\nif (typeof btoa === \"undefined\") {\r\n    (global as any).btoa = function (str) {\r\n        return Buffer.from(str || \"\", \"utf8\").toString(\"base64\");\r\n    };\r\n}\r\n\r\nexport * from \"./index-common\";\r\n"],"names":["logger","RequestType","ResponseType","nodeRequest","Buffer"],"mappings":"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"}