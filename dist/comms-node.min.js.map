{"version":3,"file":"comms-node.min.js","sources":["../src/util/logging.ts","../src/util/string.ts","../src/util/url.ts","../src/comms/connection.ts","../src/collections/stack.ts","../src/util/platform.ts","../src/index-common.ts","../src/index-node.ts"],"sourcesContent":["import { Stack } from \"../collections/stack\";\r\nimport { isNode } from \"./platform\";\r\n\r\nexport enum Level {\r\n    debug,\r\n    info,\r\n    notice,\r\n    warning,\r\n    error,\r\n    critical,\r\n    alert,\r\n    emergency\r\n}\r\n\r\nconst colours = {\r\n    debug: \"cyan\",\r\n    info: \"green\",\r\n    notice: \"grey\",\r\n    warning: \"blue\",\r\n    errpr: \"red\",\r\n    critical: \"magenta\",\r\n    alert: \"magenta\",\r\n    emergency: \"magenta\"\r\n};\r\n\r\nexport class Logging {\r\n    private static _instance: Logging;\r\n    private _levelStack = new Stack<Level>();\r\n    private _level = Level.error;\r\n    private _filter: string = \"\";\r\n\r\n    public static Instance() {\r\n        return this._instance || (this._instance = new this());\r\n    }\r\n\r\n    private constructor() {\r\n    }\r\n\r\n    private stringify(obj: object): string {\r\n        const cache: any[] = [];\r\n        return JSON.stringify(obj, function (_key, value) {\r\n            if (typeof value === \"object\" && value !== null) {\r\n                if (cache.indexOf(value) !== -1) {\r\n                    return;\r\n                }\r\n                cache.push(value);\r\n            }\r\n            return value;\r\n        }, 2);\r\n    }\r\n\r\n    log(level: Level, id: string, msg: string | object) {\r\n        if (level < this._level) return;\r\n        if (this._filter && this._filter !== id) return;\r\n\r\n        const d = new Date();\r\n        const n = d.toISOString();\r\n        if (typeof msg !== \"string\") {\r\n            msg = this.stringify(msg);\r\n        }\r\n        if (isNode) {\r\n            // tslint:disable-next-line:no-console\r\n            console.log(`[${n}] ${Level[level].toUpperCase()} ${id}:  ${msg}`);\r\n        } else {\r\n            // tslint:disable-next-line:no-console\r\n            console.log(`[${n}] %c${Level[level].toUpperCase()}%c ${id}:  ${msg}`, `color:${colours[Level[level]]}`, \"\");\r\n        }\r\n    }\r\n\r\n    debug(id: string, msg: string | object) {\r\n        this.log(Level.debug, id, msg);\r\n    }\r\n\r\n    info(id: string, msg: string | object) {\r\n        this.log(Level.info, id, msg);\r\n    }\r\n\r\n    notice(id: string, msg: string | object) {\r\n        this.log(Level.notice, id, msg);\r\n    }\r\n\r\n    warning(id: string, msg: string | object) {\r\n        this.log(Level.warning, id, msg);\r\n    }\r\n\r\n    error(id: string, msg: string | object) {\r\n        this.log(Level.error, id, msg);\r\n    }\r\n\r\n    critical(id: string, msg: string | object) {\r\n        this.log(Level.critical, id, msg);\r\n    }\r\n\r\n    alert(id: string, msg: string | object) {\r\n        this.log(Level.alert, id, msg);\r\n    }\r\n\r\n    emergency(id: string, msg: string | object) {\r\n        this.log(Level.emergency, id, msg);\r\n    }\r\n\r\n    level(): Level;\r\n    level(_: Level): this;\r\n    level(_?: Level): Level | this {\r\n        if (!arguments.length) return this._level;\r\n        this._level = _;\r\n        return this;\r\n    }\r\n\r\n    pushLevel(_: Level): this {\r\n        this._levelStack.push(this._level);\r\n        this._level = _;\r\n        return this;\r\n    }\r\n\r\n    popLevel(): this {\r\n        this._level = this._levelStack.pop();\r\n        return this;\r\n    }\r\n\r\n    filter(): string;\r\n    filter(_: string): this;\r\n    filter(_?: string): string | this {\r\n        if (!arguments.length) return this._filter;\r\n        this._filter = _;\r\n        return this;\r\n    }\r\n}\r\nexport const logger = Logging.Instance();\r\n\r\nexport class ScopedLogging {\r\n    protected _scopeID: string;\r\n\r\n    constructor(scopeID: string) {\r\n        this._scopeID = scopeID;\r\n    }\r\n\r\n    debug(msg: string | object) {\r\n        logger.debug(this._scopeID, msg);\r\n    }\r\n\r\n    info(msg: string | object) {\r\n        logger.info(this._scopeID, msg);\r\n    }\r\n\r\n    notice(msg: string | object) {\r\n        logger.notice(this._scopeID, msg);\r\n    }\r\n\r\n    warning(msg: string | object) {\r\n        logger.warning(this._scopeID, msg);\r\n    }\r\n\r\n    error(msg: string | object) {\r\n        logger.error(this._scopeID, msg);\r\n    }\r\n\r\n    critical(msg: string | object) {\r\n        logger.critical(this._scopeID, msg);\r\n    }\r\n\r\n    alert(msg: string | object) {\r\n        logger.alert(this._scopeID, msg);\r\n    }\r\n\r\n    emergency(msg: string | object) {\r\n        logger.emergency(this._scopeID, msg);\r\n    }\r\n\r\n    pushLevel(_: Level): this {\r\n        logger.pushLevel(_);\r\n        return this;\r\n    }\r\n\r\n    popLevel(): this {\r\n        logger.popLevel();\r\n        return this;\r\n    }\r\n}\r\n\r\nexport function scopedLogger(scopeID: string, filter: boolean = true) {\r\n    if (filter) {\r\n        logger.filter(scopeID);\r\n    }\r\n    return new ScopedLogging(scopeID);\r\n}\r\n","export function trim(str: string, char: string): string {\r\n    if (typeof char !== \"string\") return str;\r\n    if (char.length === 0) return str;\r\n    while (str.indexOf(char) === 0) {\r\n        str = str.substring(1);\r\n    }\r\n    while (endsWith(str, char)) {\r\n        str = str.substring(0, str.length - 1);\r\n    }\r\n    return str;\r\n}\r\n\r\nexport function endsWith(origString: string, searchString: string, position?: number) {\r\n    const subjectString = origString.toString();\r\n    if (typeof position !== \"number\" || !isFinite(position) || Math.floor(position) !== position || position > subjectString.length) {\r\n        position = subjectString.length;\r\n    }\r\n    position -= searchString.length;\r\n    const lastIndex = subjectString.lastIndexOf(searchString, position);\r\n    return lastIndex !== -1 && lastIndex === position;\r\n}\r\n","import { trim } from \"../util/string\";\r\n\r\nexport function join(...args: string[]): string {\r\n    const partialUrl: boolean = args.length && args[0].length && args[0].charAt(0) === \"/\";\r\n    return (partialUrl ? \"/\" : \"\") + args.map((arg) => {\r\n        return trim(arg, \"/\");\r\n    }).join(\"/\");\r\n}\r\n","import { scopedLogger } from \"../util/logging\";\r\nimport { join } from \"../util/url\";\r\n\r\nconst logger = scopedLogger(\"comms/connection.ts\");\r\n\r\nexport enum RequestType {\r\n    POST,\r\n    GET,\r\n    JSONP\r\n}\r\n\r\nexport enum ResponseType {\r\n    JSON,\r\n    TEXT\r\n}\r\n\r\nexport interface IOptions {\r\n    baseUrl: string;\r\n    type?: RequestType;\r\n    userID?: string;\r\n    password?: string;\r\n    rejectUnauthorized?: boolean;\r\n    timeoutSecs?: number;\r\n}\r\nconst DefaultOptions: IOptions = {\r\n    type: RequestType.POST,\r\n    baseUrl: \"\",\r\n    userID: \"\",\r\n    password: \"\",\r\n    rejectUnauthorized: false,\r\n    timeoutSecs: 60\r\n};\r\n\r\nexport interface IConnection {\r\n    opts(_: Partial<IOptions>): this;\r\n    opts(): IOptions;\r\n\r\n    send(action: string, request: any, responseType?: ResponseType): Promise<any>;\r\n    clone(): IConnection;\r\n}\r\n\r\n//  Polyfill helpers  ---\r\nlet _nodeRequest: any = null;\r\nexport function initNodeRequest(nodeRequest: any) {\r\n    _nodeRequest = nodeRequest;\r\n}\r\n\r\nlet _d3Request: any = null;\r\nexport function initD3Request(d3Request: any) {\r\n    _d3Request = d3Request;\r\n}\r\n\r\nexport class Connection implements IConnection {\r\n    protected _opts: IOptions;\r\n\r\n    constructor(opts: IOptions) {\r\n        this.opts(opts);\r\n    }\r\n\r\n    protected serialize(obj: any, prefix: string = \"\"): string {\r\n        if (prefix) {\r\n            prefix += \".\";\r\n        }\r\n        if (typeof obj !== \"object\") {\r\n            return encodeURIComponent(obj);\r\n        }\r\n\r\n        const str: string[] = [];\r\n        for (const key in obj) {\r\n            if (obj.hasOwnProperty(key)) {\r\n                if (obj[key] instanceof Array) {\r\n                    //  Specific to ESP - but no REST standard exists...\r\n                    let includeItemCount = false;\r\n                    obj[key].forEach((row: any, i: number) => {\r\n                        if (typeof row === \"object\") {\r\n                            includeItemCount = true;\r\n                            str.push(this.serialize(row, prefix + encodeURIComponent(`${key}.${i}`)));\r\n                        } else {\r\n                            str.push(prefix + encodeURIComponent(`${key}_i${i}`) + \"=\" + this.serialize(row));\r\n                        }\r\n                    });\r\n                    if (includeItemCount) {\r\n                        str.push(prefix + encodeURIComponent(`${key}.itemcount`) + \"=\" + obj[key].length);\r\n                    }\r\n                } else if (typeof obj[key] === \"object\") {\r\n                    str.push(this.serialize(obj[key], prefix + encodeURIComponent(key)));\r\n                } else {\r\n                    str.push(prefix + encodeURIComponent(key) + \"=\" + encodeURIComponent(obj[key]));\r\n                }\r\n            }\r\n        }\r\n        return str.join(\"&\");\r\n    }\r\n\r\n    deserialize(body: string) {\r\n        return JSON.parse(body);\r\n    }\r\n\r\n    private nodeRequestSend(verb: \"POST\" | \"GET\", action: string, request: any, responseType: ResponseType = ResponseType.JSON): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            const options: any = {\r\n                method: verb,\r\n                uri: join(this._opts.baseUrl, action),\r\n                auth: {\r\n                    user: this._opts.userID,\r\n                    pass: this._opts.password,\r\n                    sendImmediately: true\r\n                },\r\n                username: this._opts.userID,\r\n                password: this._opts.password,\r\n                timeout: this._opts.timeoutSecs * 1000\r\n            };\r\n            //  Older ESP versions were not case insensitive  ---\r\n            const oldESPAuth = `Basic ${btoa(this._opts.userID + \":\" + this._opts.password)}`;\r\n            switch (verb) {\r\n                case \"GET\":\r\n                    options.headers = {\r\n                        Authorization: oldESPAuth\r\n                    };\r\n                    options.uri += \"?\" + this.serialize(request);\r\n                    break;\r\n                case \"POST\":\r\n                    options.headers = {\r\n                        \"X-Requested-With\": \"XMLHttpRequest\",\r\n                        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                        \"Authorization\": oldESPAuth\r\n                    };\r\n                    options.rejectUnauthorized = this._opts.rejectUnauthorized;\r\n                    options.body = this.serialize(request);\r\n                    break;\r\n                default:\r\n            }\r\n            _nodeRequest(options, (err: any, resp: any, body: any) => {\r\n                if (err) {\r\n                    reject(new Error(err));\r\n                } else if (resp && resp.statusCode === 200) {\r\n                    resolve(responseType === ResponseType.JSON ? this.deserialize(body) : body);\r\n                } else {\r\n                    reject(new Error(body));\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    private d3Send(verb: \"POST\" | \"GET\", action: string, request: any, responseType: ResponseType = ResponseType.JSON): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            const options: any = {\r\n                method: verb,\r\n                uri: join(this._opts.baseUrl, action),\r\n                auth: {\r\n                    user: this._opts.userID,\r\n                    pass: this._opts.password,\r\n                    sendImmediately: true\r\n                },\r\n                username: this._opts.userID,\r\n                password: this._opts.password\r\n            };\r\n            switch (verb) {\r\n                case \"GET\":\r\n                    options.uri += \"?\" + this.serialize(request);\r\n                    break;\r\n                case \"POST\":\r\n                    options.headers = {\r\n                        \"X-Requested-With\": \"XMLHttpRequest\",\r\n                        \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n                    };\r\n                    options.rejectUnauthorized = this._opts.rejectUnauthorized;\r\n                    options.body = this.serialize(request);\r\n                    break;\r\n                default:\r\n            }\r\n            const xhr = _d3Request(options.uri)\r\n                .timeout(this._opts.timeoutSecs * 1000)\r\n                ;\r\n            if (verb === \"POST\") {\r\n                xhr\r\n                    .header(\"X-Requested-With\", \"XMLHttpRequest\")\r\n                    .header(\"Content-Type\", \"application/x-www-form-urlencoded\")\r\n                    .header(\"Origin\", null)\r\n                    ;\r\n            }\r\n            xhr\r\n                .send(verb, options.body, (err: any, resp: any) => {\r\n                    if (err) {\r\n                        reject(new Error(err));\r\n                    } else if (resp && resp.status === 200) {\r\n                        resolve(responseType === ResponseType.JSON ? this.deserialize(resp.responseText) : resp.responseText);\r\n                    } else {\r\n                        reject(new Error(resp.responseText));\r\n                    }\r\n                });\r\n        });\r\n    }\r\n\r\n    post(action: string, request: any, responseType: ResponseType = ResponseType.JSON): Promise<any> {\r\n        if (_nodeRequest) {\r\n            return this.nodeRequestSend(\"POST\", action, request, responseType);\r\n        } else if (_d3Request) {\r\n            return this.d3Send(\"POST\", action, request, responseType);\r\n        }\r\n        throw new Error(\"No transport\");\r\n    }\r\n\r\n    get(action: string, request: any, responseType: ResponseType = ResponseType.JSON): Promise<any> {\r\n        if (_nodeRequest) {\r\n            return this.nodeRequestSend(\"GET\", action, request, responseType);\r\n        } else if (_d3Request) {\r\n            return this.d3Send(\"GET\", action, request, responseType);\r\n        }\r\n        throw new Error(\"No transport\");\r\n    }\r\n\r\n    jsonp(action: string, request: any = {}, responseType: ResponseType = ResponseType.JSON): Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let respondedTimeout = this._opts.timeoutSecs * 1000;\r\n            const respondedTick = 5000;\r\n            const callbackName = \"jsonp_callback_\" + Math.round(Math.random() * 999999);\r\n            const context = this;\r\n            (window as any)[callbackName] = function (response: any) {\r\n                respondedTimeout = 0;\r\n                doCallback();\r\n                resolve(responseType === ResponseType.JSON && typeof response === \"string\" ? context.deserialize(response) : response);\r\n            };\r\n            const script = document.createElement(\"script\");\r\n            let url = join(this._opts.baseUrl, action);\r\n            url += url.indexOf(\"?\") >= 0 ? \"&\" : \"?\";\r\n            script.src = url + \"jsonp=\" + callbackName + \"&\" + this.serialize(request);\r\n            document.body.appendChild(script);\r\n            const progress = setInterval(function () {\r\n                if (respondedTimeout <= 0) {\r\n                    clearInterval(progress);\r\n                } else {\r\n                    respondedTimeout -= respondedTick;\r\n                    if (respondedTimeout <= 0) {\r\n                        clearInterval(progress);\r\n                        logger.error(\"Request timeout:  \" + script.src);\r\n                        doCallback();\r\n                        reject(Error(\"Request timeout:  \" + script.src));\r\n                    } else {\r\n                        logger.debug(\"Request pending (\" + respondedTimeout / 1000 + \" sec):  \" + script.src);\r\n                    }\r\n                }\r\n            }, respondedTick);\r\n\r\n            function doCallback() {\r\n                delete (window as any)[callbackName];\r\n                document.body.removeChild(script);\r\n            }\r\n        });\r\n    }\r\n\r\n    //  IConnection  ---\r\n\r\n    opts(_: Partial<IOptions>): this;\r\n    opts(): IOptions;\r\n    opts(_?: Partial<IOptions>): this | IOptions {\r\n        if (arguments.length === 0) return this._opts;\r\n        this._opts = { ...DefaultOptions, ..._ };\r\n        return this;\r\n    }\r\n\r\n    send(action: string, request: any, responseType: ResponseType = ResponseType.JSON): Promise<any> {\r\n        switch (this._opts.type) {\r\n            case RequestType.JSONP:\r\n                return this.jsonp(action, request, responseType);\r\n            case RequestType.GET:\r\n                return this.get(action, request, responseType);\r\n            case RequestType.POST:\r\n            default:\r\n                return this.post(action, request, responseType);\r\n        }\r\n    }\r\n\r\n    clone() {\r\n        return new Connection(this.opts());\r\n    }\r\n}\r\n\r\nexport type IConnectionFactory = (opts: IOptions) => IConnection;\r\nexport let createConnection: IConnectionFactory = function (opts: IOptions): IConnection {\r\n    return new Connection(opts);\r\n};\r\n\r\nexport function setTransportFactory(newFunc: IConnectionFactory): IConnectionFactory {\r\n    const retVal = createConnection;\r\n    createConnection = newFunc;\r\n    return retVal;\r\n}\r\n","/**\r\n * A generic Stack\r\n */\r\nexport class Stack<T> {\r\n    private stack: T[] = [];\r\n\r\n    /**\r\n     * Push element onto the stack\r\n     *\r\n     * @param e - element to push\r\n     */\r\n    push(e: T) {\r\n        this.stack.push(e);\r\n        return e;\r\n    }\r\n\r\n    /**\r\n     * Pop element off the stack\r\n     */\r\n    pop(): T | undefined {\r\n        return this.stack.pop();\r\n    }\r\n\r\n    /**\r\n     * Top item on the stack\r\n     *\r\n     * @returns Top element on the stack\r\n     */\r\n    top(): T | undefined {\r\n        return this.stack.length ? this.stack[this.stack.length - 1] : undefined;\r\n    }\r\n\r\n    /**\r\n     * Depth of stack\r\n     *\r\n     * @returns Depth\r\n     */\r\n    depth(): number {\r\n        return this.stack.length;\r\n    }\r\n}\r\n","export const root = new Function(\"try{return global;}catch(e){return window;}\")();\r\n\r\nexport const isBrowser = new Function(\"try{return this===window;}catch(e){return false;}\");\r\nexport const isNode = new Function(\"try{return this===global;}catch(e){return false;}\");\r\nexport const isTravis = new Function(\"try{return process.env.TRAVIS;}catch(e){return false;}\");\r\n","export const version = \"0.0.1\";\r\n\r\nexport { Connection, RequestType, ResponseType } from \"./comms/connection\";\r\n","//  XHR polyfill  ---\r\nimport * as nodeRequest from \"request\";\r\nimport { initNodeRequest } from \"./comms/connection\";\r\ninitNodeRequest(nodeRequest);\r\n\r\n//  btoa polyfill  ---\r\nimport { Buffer } from \"safe-buffer\";\r\nif (typeof btoa === \"undefined\") {\r\n    (global as any).btoa = function (str) {\r\n        return Buffer.from(str || \"\", \"utf8\").toString(\"base64\");\r\n    };\r\n}\r\n\r\nexport * from \"./index-common\";\r\n"],"names":["scopeID","filter","logger","ScopedLogging","str","char","length","indexOf","substring","endsWith","origString","searchString","position","subjectString","toString","isFinite","Math","floor","lastIndex","lastIndexOf","_i","args","charAt","map","arg","trim","join","nodeRequest","_nodeRequest","this","Stack","e","stack","push","pop","undefined","root","Function","isNode","Level","colours","debug","info","notice","warning","errpr","critical","alert","emergency","error","Logging","_instance","obj","cache","JSON","stringify","_key","value","level","id","msg","_level","_filter","d","Date","n","toISOString","console","log","toUpperCase","_","arguments","_levelStack","Instance","_scopeID","pushLevel","popLevel","scopedLogger","RequestType","ResponseType","DefaultOptions","type","POST","baseUrl","userID","password","rejectUnauthorized","timeoutSecs","_d3Request","opts","Connection","prefix","encodeURIComponent","key","hasOwnProperty","Array","includeItemCount_1","forEach","row","i","_this","serialize","this_1","body","parse","verb","action","request","responseType","Promise","resolve","reject","options","method","uri","_opts","auth","user","pass","sendImmediately","username","timeout","oldESPAuth","btoa","headers","Authorization","X-Requested-With","Content-Type","err","resp","Error","statusCode","deserialize","xhr","header","send","status","responseText","nodeRequestSend","d3Send","window","callbackName","document","removeChild","script","respondedTimeout","round","random","context","response","doCallback","createElement","url","src","appendChild","progress","setInterval","clearInterval","JSONP","jsonp","GET","get","post","version","initNodeRequest","global","Buffer","from"],"mappings":"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"}